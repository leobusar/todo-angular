{"version":3,"sources":["webpack:///./src/app/models/task.ts","webpack:///./src/app/tasks/components/taskedit/taskedit.component.css","webpack:///./src/app/tasks/components/taskedit/taskedit.component.html","webpack:///./src/app/tasks/components/taskedit/taskedit.component.ts","webpack:///./src/app/tasks/components/tasklist/tasklist.component.css","webpack:///./src/app/tasks/components/tasklist/tasklist.component.html","webpack:///./src/app/tasks/components/tasklist/tasklist.component.ts","webpack:///./src/app/tasks/tasks-routing.module.ts","webpack:///./src/app/tasks/tasks.component.css","webpack:///./src/app/tasks/tasks.component.html","webpack:///./src/app/tasks/tasks.component.ts","webpack:///./src/app/tasks/tasks.module.ts"],"names":[],"mappings":"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","file":"tasks-tasks-module.js","sourcesContent":["export class Task {\n\tid :string;\n\tname :string;\n\tcategory :string;\n}\n","module.exports = \"\"","module.exports = \"<p>\\n</p>\\n\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../../../models/task';\n\n@Component({\n  selector: 'app-taskedit',\n  templateUrl: './taskedit.component.html',\n  styleUrls: ['./taskedit.component.css']\n})\nexport class TaskeditComponent implements OnInit {\n\t@Output() public agregartarea = new EventEmitter<void>();\n\n\ttask :Task;\n\n  constructor() { }\n\n  ngOnInit() {\n  \tthis.reset();\n\n  }\n\n  reset(){\n  \tthis.task = new Task;\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"tasks?.length; else notask\\\">\\n\\t<ul class=\\\"list-group\\\">\\n\\t\\t<li class=\\\"list-group-item\\\" *ngFor=\\\"let task of tasks\\\">\\n\\t\\t{{task.category}} - {{task.name}} \\n\\t\\t<button (click)=\\\"eliminarTarea(event, task)\\\" class=\\\"btn btn-danger\\\">Eliminar</button>\\n\\t\\t<button (click)=\\\"getTask(event, task)\\\"  class=\\\"btn btn-info mx-2\\\" >Editar</button>\\n\\n\\t</li>\\n\\t</ul>\\n</div>\\n\\n<ng-template #notask>\\n\\t<h3>No hay tareas</h3>\\n</ng-template>\"","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Task } from '../../../models/task';\n\n\n@Component({\n  selector: 'app-tasklist',\n  templateUrl: './tasklist.component.html',\n  styleUrls: ['./tasklist.component.css']\n})\nexport class TasklistComponent implements OnInit {\n  @Input() public tasks: Task[];\n  @Output() public deleteTask = new EventEmitter<void>();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  eliminarTarea(e, task){\n  \tthis.deleteTask.emit(task);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {TasksComponent} from  './tasks.component';\n\nconst routes: Routes = [\n\t  { path: '', component: TasksComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TasksRoutingModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  \\t<app-tasklist [tasks] = \\\"tasklist\\\" (deleteTask)=\\\"deleteTask($event)\\\">\\n  \\t</app-tasklist>\\n  \\t<app-taskedit (agregartarea)=\\\"addTask\\\" ></app-taskedit>\\n</p>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Task } from '../models/task';\nimport { TaskService } from  '../services/task.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.css']\n})\nexport class TasksComponent implements OnInit, OnDestroy {\n\n  tasklist :Task[];\n  owner :string;\n  private _subscriptions: Subscription[] = [];\n\n  constructor( public taskService: TaskService ) {\n  \tthis.owner = \"Leonardo Bustamante\";\n  \tthis.tasklist = [];\n  //  this.reset();\n   }\n\n  ngOnInit() {\n    this._subscriptions.push( this.taskService.getTasks().subscribe((tasks)=>\n        {\n          this.tasklist = tasks;\n        }) \n     );\n  }\n\n// OnDestroy Hook\n  public ngOnDestroy() {\n    // Unsubscribe from each Subscription\n    this._subscriptions.forEach((subscription: Subscription) =>\n     { subscription.unsubscribe() });\n  }\n\n  // reset(){\n  //   this.task = {\"id\": \"\", \"name\": \"\", \"category\": \"\"};\n  // }\n\n  addTask(task){\n  \tif( task.name !=\"\" && task.category !=\"\"){\n      if (task.id !=\"\"){\n        this.taskService.updateTask(task);\n        //this.successMessage = \"La tarea ha sido actualizada\";    \n      }else{\n        this.taskService.addTask(task);\n        //this.successMessage = \"La tarea ha sido actualizada\";            \n      }\n      //setTimeout(() => this.successMessage = null, 2000);\n\n      //this.task = {\"id\": \"\", \"name\": \"\", \"category\": \"\"};\n      //this.reset();\n    }\n\n  }\n\n  deleteTask(task: Task){\n  \tconsole.log(task);\n    this.taskService.delTask(task);\n  }\n\n   getTask(e, task: Task){\n //    task = task;\n //    this.button = \"Editar\";\n\n   }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TasksRoutingModule } from './tasks-routing.module';\nimport { TasksComponent } from './tasks.component';\nimport { TaskeditComponent } from './components/taskedit/taskedit.component';\nimport { TasklistComponent } from './components/tasklist/tasklist.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TasksRoutingModule\n  ],\n  declarations: [TasksComponent, TaskeditComponent, TasklistComponent]\n})\nexport class TasksModule { }\n"],"sourceRoot":""}